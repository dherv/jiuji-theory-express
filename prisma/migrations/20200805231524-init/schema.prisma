datasource mysql {
  provider = "mysql"
  url      = "***"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int             @default(autoincrement()) @id
  email         String          @unique
  name          String
  belt          Belt            @default(WHITE)
  location      Location        @relation(fields: [locationId], references: [id])
  locationId    Int
  started       DateTime        @default(now())
  createdAt     DateTime        @default(now())
  Club          Club[]
  TechniqueStep TechniqueStep[]
  Submission    Submission[]
  Guard         Guard[]
  Video         Video[]
}

model Location {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
  Club      Club[]
}

model Teacher {
  id        Int         @default(autoincrement()) @id
  name      String
  club      Club        @relation(fields: [clubId], references: [id])
  clubId    Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Technique Technique[]
}

model Club {
  id         Int       @default(autoincrement()) @id
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  location   Location  @relation(fields: [locationId], references: [id])
  locationId Int
  teachers   Teacher[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Technique {
  id            Int             @default(autoincrement()) @id
  name          String
  teacher       Teacher         @relation(fields: [teacherId], references: [id])
  teacherId     Int
  position      Position        @relation(fields: [positionId], references: [id])
  positionId    Int
  submision     Submission      @relation(fields: [submissionId], references: [id])
  submissionId  Int
  guard         Guard           @relation(fields: [guardId], references: [id])
  guardId       Int
  video         Video[]         @relation(references: [id])
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  TechniqueStep TechniqueStep[]
}

model TechniqueStep {
  id          Int       @default(autoincrement()) @id
  text        String
  order       Int
  technique   Technique @relation(fields: [techniqueId], references: [id])
  techniqueId Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum PositionType {
  OFFENSIVE
  DEFENSIVE
}

model Position {
  id        Int          @default(autoincrement()) @id
  name      PositionType @default(OFFENSIVE)
  Technique Technique[]
}

model Submission {
  id        Int         @default(autoincrement()) @id
  name      String
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  default   Boolean
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Technique Technique[]
}

model Guard {
  id        Int         @default(autoincrement()) @id
  name      String
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  default   Boolean
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Technique Technique[]
}

model Video {
  id          Int         @default(autoincrement()) @id
  name        String
  channelId   String
  description String
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  technique   Technique[] @relation(references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

enum Belt {
  WHITE
  BLUE
  PURPLE
  BROWN
  BLACK
}
