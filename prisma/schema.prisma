generator client {
  provider        = "prisma-client-js"

}

datasource mysql {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Club {
  id         Int       @default(autoincrement()) @id
  name       String
  locationId Int
  userId     Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now())
  location   Location  @relation(fields: [locationId], references: [id])
  user       User      @relation(fields: [userId], references: [id])
  teachers   Teacher[]

  @@index([locationId], name: "locationId")
}

model Guard {
  id         Int         @default(autoincrement()) @id
  name       String
  userId     Int
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id])
  techniques Technique[]

  @@index([userId], name: "userId")
}

model Location {
  id        Int      @default(autoincrement()) @id
  name      String
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  clubs     Club[]
  user      User     @relation(fields: [userId], references: [id])
}

model Position {
  id         Int           @default(autoincrement()) @id
  name       Position_name @default(OFFENSIVE)
  techniques Technique[]
}

model Submission {
  id         Int         @default(autoincrement()) @id
  name       String
  userId     Int
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id])
  techniques Technique[]

  @@index([userId], name: "userId")
}

model Teacher {
  id         Int         @default(autoincrement()) @id
  name       String
  clubId     Int
  userId     Int
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now())
  club       Club        @relation(fields: [clubId], references: [id])
  user       User        @relation(fields: [userId], references: [id])
  techniques Technique[]

  @@index([clubId], name: "clubId")
}

model Technique {
  id           Int             @default(autoincrement()) @id
  name         String
  teacherId    Int
  positionId   Int
  submissionId Int
  guardId      Int
  userId       Int
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @default(now())
  guard        Guard           @relation(fields: [guardId], references: [id])
  position     Position        @relation(fields: [positionId], references: [id])
  submission   Submission      @relation(fields: [submissionId], references: [id])
  teacher      Teacher         @relation(fields: [teacherId], references: [id])
  user         User            @relation(fields: [userId], references: [id])
  steps        TechniqueStep[]
  videos       Video[]

  @@index([guardId], name: "guardId")
  @@index([positionId], name: "positionId")
  @@index([submissionId], name: "submissionId")
  @@index([teacherId], name: "teacherId")
}

model TechniqueStep {
  id          Int       @default(autoincrement()) @id
  text        String
  order       Int
  techniqueId Int
  userId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  technique   Technique @relation(fields: [techniqueId], references: [id])
  user        User      @relation(fields: [userId], references: [id])

  @@index([techniqueId], name: "techniqueId")
  @@index([userId], name: "userId")
}

model User {
  id             Int             @default(autoincrement()) @id
  email          String          @unique
  name           String
  password       String
  belt           User_belt       @default(WHITE)
  started        DateTime        @default(now())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now())
  guards         Guard[]
  submissions    Submission[]
  techniqueSteps TechniqueStep[]
  videos         Video[]
  clubs          Club[]
  locations      Location[]
  teachers       Teacher[]
  techniques     Technique[]
}

model Video {
  id          Int         @default(autoincrement()) @id
  title       String
  description String
  youtubeId   String
  userId      Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
  user        User        @relation(fields: [userId], references: [id])
  techniques  Technique[]

  @@index([userId], name: "userId")
}

enum Position_name {
  OFFENSIVE
  DEFENSIVE
}

enum User_belt {
  WHITE
  BLUE
  PURPLE
  BROWN
  BLACK
}
